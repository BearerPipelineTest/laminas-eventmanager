name: continuous-integration

on:
  pull_request:
    paths-ignore:
    - 'doc/**'
    - 'mkdocs.yml'
    - '*.md'

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-version: '7.3'
            deps-version: 'lowest'
            composer-args: '--no-interaction'
            cs-check: ''
            test-coverage: 'none'
            benchmarks: ''
          - php-version: '7.3'
            deps-version: 'latest'
            composer-args: '--no-interaction'
            cs-check: ''
            test-coverage: 'none'
            benchmarks: ''
          - php-version: '7.4'
            deps-version: 'lowest'
            composer-args: '--no-interaction'
            cs-check: ''
            test-coverage: 'none'
            benchmarks: ''
          - php-version: '7.4'
            deps-version: 'latest'
            composer-args: '--no-interaction'
            cs-check: 'true'
            test-coverage: 'xdebug'
            benchmarks: 'true'
          - php-version: '8.0'
            deps-version: 'lowest'
            composer-args: '--no-interaction --ignore-platform-reqs'
            cs-check: ''
            test-coverage: 'none'
            benchmarks: ''
          - php-version: '8.0'
            deps-version: 'latest'
            composer-args: '--no-interaction --ignore-platform-reqs'
            cs-check: ''
            test-coverage: 'none'
            benchmarks: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, readline
          coverage: ${{ matrix.test-coverage }}
          tools: composer:v2, cs2pr
        env:
          update: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        env:
          COVERAGE_DEPS: 'php-coveralls/php-coveralls'
          DEPS: ${{ matrix.deps-version }}
          COMPOSER_ARGS: ${{ matrix.composer-args }}
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_COVERAGE: ${{ matrix.test-coverage }}
        run: |
          composer install $COMPOSER_ARGS
          if [[ $DEPS == 'latest' ]]; then composer update $COMPOSER_ARGS ; fi
          if [[ $DEPS == 'lowest' ]]; then composer update --prefer-lowest --prefer-stable $COMPOSER_ARGS ; fi
          if [[ $TEST_COVERAGE != 'none' ]]; then composer require --dev $COMPOSER_ARGS $COVERAGE_DEPS ; fi
          composer show

      - name: Run CS checks
        env:
          CS_CHECK: ${{ matrix.cs-check }}
        shell: bash
        run: |
          if [[ $CS_CHECK == 'true' ]]; then composer cs-check ; fi

      - name: Run benchmarks
        env:
          BENCHMARKS: ${{ matrix.benchmarks }}
        shell: bash
        run: |
          if [[ $BENCHMARKS == 'true' ]]; then vendor/bin/phpbench run --revs=2 --iterations=2 --report=aggregate ; fi

      - name: Run unit tests
        env:
          TEST_COVERAGE: ${{ matrix.test-coverage }}
        shell: bash
        run: |
          if [[ $TEST_COVERAGE != 'none' ]]; then composer test-coverage ; else composer test ; fi

      - name: Upload coverage
        env:
          TEST_COVERAGE: ${{ matrix.test-coverage }}
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          if [[ $TEST_COVERAGE != 'none' && -f clover.xml ]]; then vendor/bin/php-coveralls -v ; fi
